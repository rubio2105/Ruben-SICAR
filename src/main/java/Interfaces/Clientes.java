/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces;

import java.awt.Color;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import conexionBD.MySQL;
import java.awt.HeadlessException;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Rubén
 */
public final class Clientes extends javax.swing.JFrame {

    DefaultTableModel m;
    String monto=null;

    /**
     * Creates new form Creditos
     */
    public Clientes() throws SQLException {
        initComponents();
        cargarclientes();
        cargarcodDETALLE();
        this.jPanel1.setBackground(Color.white);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldNombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldDireccion = new javax.swing.JTextField();
        jTextFieldMunicipio = new javax.swing.JTextField();
        jTextFieldTelefono = new javax.swing.JTextField();
        jButtonGuardar = new javax.swing.JButton();
        jButtonModificar = new javax.swing.JButton();
        jButtonEliminar = new javax.swing.JButton();
        jButtonLimpiar = new javax.swing.JButton();
        jButtonSalir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableClientes = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldID = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Clientes");

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Nombre: ");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, 60, 30));

        jTextFieldNombre.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNombreActionPerformed(evt);
            }
        });
        jPanel1.add(jTextFieldNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 10, 220, 30));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Dirección:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, 30));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Municipio:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 60, -1, 30));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Teléfono:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 10, -1, 30));

        jTextFieldDireccion.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(jTextFieldDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 60, 300, 30));

        jTextFieldMunicipio.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(jTextFieldMunicipio, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 60, 150, 30));

        jTextFieldTelefono.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(jTextFieldTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 10, 110, 30));

        jButtonGuardar.setBackground(new java.awt.Color(255, 255, 255));
        jButtonGuardar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonGuardar.setText("Guardar");
        jButtonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 110, 50));

        jButtonModificar.setBackground(new java.awt.Color(255, 255, 255));
        jButtonModificar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonModificar.setText("Modificar");
        jButtonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModificarActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 110, -1, 50));

        jButtonEliminar.setBackground(new java.awt.Color(255, 255, 255));
        jButtonEliminar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 110, -1, 50));

        jButtonLimpiar.setBackground(new java.awt.Color(255, 255, 255));
        jButtonLimpiar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonLimpiar.setText("Limpiar");
        jButtonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimpiarActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonLimpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 110, 120, 50));

        jButtonSalir.setBackground(new java.awt.Color(255, 204, 204));
        jButtonSalir.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonSalir.setText("Salir");
        jButtonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalirActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 110, 90, 50));

        jTableClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTableClientesMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTableClientes);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 210, 600, 230));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Lista de Clientes");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 170, 600, 40));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("ID:");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, 30));

        jTextFieldID.setEditable(false);
        jTextFieldID.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(jTextFieldID, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, 50, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNombreActionPerformed
        // TODO add your handling code here:

        //aqui
    }//GEN-LAST:event_jTextFieldNombreActionPerformed

    private void jTableClientesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableClientesMousePressed
        // TODO add your handling code here:

        jButtonGuardar.setEnabled(false);
        jButtonEliminar.setEnabled(true);
        jButtonModificar.setEnabled(true);
        try {
            MySQL obj = new MySQL();

            int fila = jTableClientes.getSelectedRow();//obtenemose el numero de la fila                    
            jTextFieldID.setText(jTableClientes.getValueAt(fila, 0).toString());
            String consulta = "select * from cliente where id_cliente='" + Integer.parseInt(jTextFieldID.getText().trim()) + "';";
            obj.MySQLConnect();
            obj.comando = obj.conexion.createStatement();
            ResultSet r = obj.comando.executeQuery(consulta);

            while (r.next()) {
                jTextFieldID.setText(r.getString(1).trim());
                jTextFieldNombre.setText(r.getString(2).trim());
                jTextFieldDireccion.setText(r.getString(3).trim());
                jTextFieldMunicipio.setText(r.getString(4).trim());
                jTextFieldTelefono.setText(r.getString(5).trim());

            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "ERROR AL CARGAR DATOS", "ERROR", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jTableClientesMousePressed

    private void jButtonLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimpiarActionPerformed
        // TODO add your handling code here:
        limpiar();
        cargarclientes();
        try {
            cargarcodDETALLE();
        } catch (SQLException ex) {
            Logger.getLogger(Clientes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonLimpiarActionPerformed

    private void jButtonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalirActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButtonSalirActionPerformed

    private void jButtonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarActionPerformed
        // TODO add your handling code here:
        if (this.jTextFieldID.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "FALTA ESCRIBIR EL ID DEL CLIENTE", "VERIFICAR", JOptionPane.WARNING_MESSAGE);
            this.jTextFieldID.requestFocus();
        } else if (this.jTextFieldNombre.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "FALTA ESCRIBIR EL NOMBRE DEL CLIENTE", "VERIFICAR", JOptionPane.WARNING_MESSAGE);
            this.jTextFieldNombre.requestFocus();
        } else {

            try {
                MySQL obj = new MySQL();
                obj.MySQLConnect();
                obj.comando = obj.conexion.createStatement();
                PreparedStatement insertar = null;

                String consulta = "Insert into cliente values (?,?,?,?,?) ";
                insertar = obj.conexion.prepareStatement(consulta);
                insertar.setString(1, jTextFieldID.getText().trim());
                insertar.setString(2, jTextFieldNombre.getText().trim());
                insertar.setString(3, jTextFieldDireccion.getText().trim());
                insertar.setString(4, jTextFieldMunicipio.getText().trim());
                insertar.setString(5, jTextFieldTelefono.getText().trim());
                insertar.executeUpdate();

                JOptionPane.showMessageDialog(null, "Datos Registrados Correctamente");
                cargarclientes();
                limpiar();
                cargarcodDETALLE();

            } catch (SQLException | HeadlessException e) {
                JOptionPane.showMessageDialog(null, "NO SE REGISTRARON LOS DATOS CORRECTAMENTE", "ERROR", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButtonGuardarActionPerformed

    private void jButtonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModificarActionPerformed
        // TODbO add your handling code here:
        if (jTextFieldNombre.getText().length() <= 0) {
            JOptionPane.showMessageDialog(null, "DEBE SELECCIONAR UN CLIENTE PARA MODIFICAR", "MENSAJE", JOptionPane.WARNING_MESSAGE);
        } else {
            try {
                MySQL obj = new MySQL();
                obj.MySQLConnect();
                obj.comando = obj.conexion.createStatement();
                PreparedStatement insertar = null;

                String consulta = ("update cliente "
                        + "set nombre_cliente= ?  ,  "
                        + "direccion_cliente= ? , "
                        + "localidad_cliente= ? , "
                        + "telefono_cliente= ? "
                        + "where id_cliente= ? ");
                insertar = obj.conexion.prepareStatement(consulta);
                insertar.setInt(5, Integer.parseInt(jTextFieldID.getText().trim()));
                insertar.setString(1, jTextFieldNombre.getText().trim());
                insertar.setString(2, jTextFieldDireccion.getText().trim());
                insertar.setString(3, jTextFieldMunicipio.getText().trim());
                insertar.setString(4, jTextFieldTelefono.getText().trim());
                insertar.executeUpdate();

                JOptionPane.showMessageDialog(null, "Datos Actualizados Correctamente");
                cargarclientes();
                limpiar();
                cargarcodDETALLE();

            } catch (SQLException | HeadlessException e) {
                JOptionPane.showMessageDialog(null, "NO SE ACTUALIZARON LOS DATOS CORRECTAMENTE", "ERROR", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButtonModificarActionPerformed

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
        // TODO add your handling code here:
        if (jTextFieldNombre.getText().length() <= 0) {
            JOptionPane.showMessageDialog(null, "Debe Seleccionar Un Cliente Para Eliminarlo", "MENSAJE", JOptionPane.WARNING_MESSAGE);
        } else {

            int res = JOptionPane.showConfirmDialog(null, "Está Seguro De Eliminar El Cliente:  " + this.jTextFieldNombre.getText().trim(), "MENSAJE", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            if (res == 0) {
                try {
                    MySQL obj = new MySQL();
                    String cod = jTextFieldID.getText().trim();
                    String c = ("DELETE FROM cliente WHERE id_cliente= ?");
                    obj.MySQLConnect();
                    obj.comando = obj.conexion.createStatement();
                    PreparedStatement insertar;
                    insertar = obj.conexion.prepareStatement(c);
                    insertar.setInt(1, Integer.parseInt(cod));
                    insertar.execute();
                    JOptionPane.showMessageDialog(null, "Cliente Eliminado");
                    cargarclientes();
                    limpiar();
                    cargarcodDETALLE();
                    jButtonGuardar.setEnabled(true);
                } catch (SQLException ex) {
                    Logger.getLogger(Clientes.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        }
    }//GEN-LAST:event_jButtonEliminarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Clientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Clientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Clientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Clientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Clientes().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(Clientes.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonGuardar;
    private javax.swing.JButton jButtonLimpiar;
    private javax.swing.JButton jButtonModificar;
    private javax.swing.JButton jButtonSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableClientes;
    private javax.swing.JTextField jTextFieldDireccion;
    private javax.swing.JTextField jTextFieldID;
    private javax.swing.JTextField jTextFieldMunicipio;
    private javax.swing.JTextField jTextFieldNombre;
    private javax.swing.JTextField jTextFieldTelefono;
    // End of variables declaration//GEN-END:variables

    public void cargarclientes() {
        try {
            String titulos[] = {"ID", "NOMBRE COMPLETO", "DOMICILIO", "TELEFONO"};
            m = new DefaultTableModel(null, titulos);
            JTable p = new JTable(m);
            String fila[] = new String[4];
            String consulta = "SELECT *  FROM  cliente";
            MySQL obj = new MySQL();
            obj.MySQLConnect();
            obj.comando = obj.conexion.createStatement();
            ResultSet r = obj.comando.executeQuery(consulta);

            int index = 1;
            while (r.next()) {

                fila[0] = r.getString(1).trim();
                fila[1] = r.getString(2).trim();
                fila[2] = r.getString(3).trim();
                fila[3] = r.getString(5).trim();

                m.addRow(fila);
                index++;
            }
            jTableClientes.setModel(m);
            TableRowSorter<TableModel> elQueOrdena = new TableRowSorter<TableModel>(m);
            jTableClientes.setRowSorter(elQueOrdena);
            this.jTableClientes.setModel(m);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al extraer los datos de la tabla", "ADVERTENCIA", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void limpiar() {
        jTextFieldID.setText("");
        jTextFieldNombre.setText("");
        jTextFieldMunicipio.setText("");
        jTextFieldTelefono.setText("");
        jTextFieldDireccion.setText("");
        jButtonGuardar.setEnabled(true);
    }

    public void cargarcodDETALLE() throws SQLException {

        MySQL obj = new MySQL();
        obj.MySQLConnect();
        obj.comando = obj.conexion.createStatement();
        String consulta = "", c = "";
        consulta = "select count(id_cliente) from cliente";

        ResultSet r = obj.comando.executeQuery(consulta);
        int conteo = 0;
        try {
            if (r.next()) {
                conteo = r.getInt(1);

            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        if (conteo == 0) {
            int add = conteo + 1;
            jTextFieldID.setText(String.valueOf(add).trim());
        } else {
            cargarcodnotaDETALLE();
        }
    }

    public void cargarcodnotaDETALLE() throws SQLException {

        MySQL obj = new MySQL();
        obj.MySQLConnect();
        obj.comando = obj.conexion.createStatement();
        String consulta = "", c = null;
        consulta = "select max(id_cliente) from cliente";
        ResultSet r = obj.comando.executeQuery(consulta);
        try {
            while (r.next()) {
                c = r.getString(1);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "NO SE PUDO EJECUTAR LA CONSULTA");
        }
        int add = Integer.parseInt(c) + 1;
        jTextFieldID.setText(String.valueOf(add).trim());
    }
}
